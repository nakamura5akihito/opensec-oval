<?xml version="1.0" encoding="UTF-8"?>
<oval_definitions xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd      http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5">
  <generator>
    <oval:schema_version>5.10.1</oval:schema_version>
    <oval:timestamp>2009-01-12T10:41:00-05:00</oval:timestamp>
    <terms_of_use>Copyright (c) 2002-2013, The MITRE Corporation. All rights reserved. The contents of this file are subject to the license described in terms.txt.</terms_of_use>
  </generator>
  <definitions>
    <definition id="oval:org.mitre.oval.test:def:934" version="1" class="miscellaneous">
      <metadata>
        <title>Evaluate to true if the int datatype is properly supported</title>
        <description>This definition is intended to evalutate to true if the interpreter properly supports the int datatype and all of its valid operations.</description>
      </metadata>
      <criteria operator="AND">
        <criteria operator="AND" comment="True if the equals operation is supported">
          <criterion comment="Test that the equals operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:391"/>
          <criterion negate="true" comment="Test that the equals operation is supported with two unequal integer values." test_ref="oval:org.mitre.oval.test:tst:898"/>
        </criteria>
        <criteria operator="AND" comment="True if the not equal operation is supported">
          <criterion negate="true" comment="Test that the not equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:1"/>
          <criterion comment="Test that the not equal operation is supported with two unequal integer values." test_ref="oval:org.mitre.oval.test:tst:1000"/>
        </criteria>
        <criteria operator="AND" comment="True if the greater than operation is supported">
          <criterion comment="Test that the greater than operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:14"/>
          <criterion negate="true" comment="Test that the greater than operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:626"/>
          <criterion negate="true" comment="Test that the greater than operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:339"/>
        </criteria>
        <criteria operator="AND" comment="True if the greater than or equal operation is supported">
          <criterion comment="Test that the greater than or equal operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:164"/>
          <criterion comment="Test that the greater than or equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:363"/>
          <criterion negate="true" comment="Test that the greater than or equal operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:407"/>
        </criteria>
        <criteria operator="AND" comment="True if the less than operation is supported">
          <criterion comment="Test that the less than operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:501"/>
          <criterion negate="true" comment="Test that the less than operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:194"/>
          <criterion negate="true" comment="Test that the less than operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:454"/>
        </criteria>
        <criteria operator="AND" comment="True if the less than or equal operation is supported">
          <criterion comment="Test that the less than or equal operation is supported with a less than integer value." test_ref="oval:org.mitre.oval.test:tst:781"/>
          <criterion comment="Test that the less than or equal operation is supported with two equal integer values." test_ref="oval:org.mitre.oval.test:tst:871"/>
          <criterion negate="true" comment="Test that the less than or equal operation is supported with a greater than integer value." test_ref="oval:org.mitre.oval.test:tst:716"/>
        </criteria>
        <criteria operator="AND" comment="True if the bitwise and operation is supported">
          <criterion comment="Test that the bitwise and operation is supported with a single integer where the result is the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:397"/>
          <criterion negate="true" comment="Test that the bitwise and operation is supported with a single integer where the result is not the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:917"/>
        </criteria>
        <criteria operator="AND" comment="True if the bitwise or operation is supported">
          <criterion comment="Test that the bitwise or operation is supported with a single integer where the result is the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:153"/>
          <criterion negate="true" comment="Test that the bitwise or operation is supported with a single integer where the result is not the same as the state mask." test_ref="oval:org.mitre.oval.test:tst:193"/>
        </criteria>
      </criteria>
    </definition>
  </definitions>
  <tests>
    <variable_test id="oval:org.mitre.oval.test:tst:391" version="1" comment="Test that the equals operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:633"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:898" version="1" comment="Test that the equals operation is supported with two unequal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:398"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1" version="1" comment="Test that the not equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:38"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:1000" version="1" comment="Test that the not equal operation is supported with two unequal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:946"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:14" version="1" comment="Test that the greater than operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:253"/>
      <state state_ref="oval:org.mitre.oval.test:ste:193"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:626" version="1" comment="Test that the greater than operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:709"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:339" version="1" comment="Test that the greater than operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:811"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:164" version="1" comment="Test that the greater than or equal operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:253"/>
      <state state_ref="oval:org.mitre.oval.test:ste:960"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:363" version="1" comment="Test that the greater than or equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:720"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:407" version="1" comment="Test that the greater than or equal operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:359"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:501" version="1" comment="Test that the less than operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:516"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:194" version="1" comment="Test that the less than operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:342"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:454" version="1" comment="Test that the less than operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:253"/>
      <state state_ref="oval:org.mitre.oval.test:ste:567"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:781" version="1" comment="Test that the less than or equal operation is supported with a less than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:648"/>
      <state state_ref="oval:org.mitre.oval.test:ste:467"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:871" version="1" comment="Test that the less than or equal operation is supported with two equal integer values." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:893"/>
      <state state_ref="oval:org.mitre.oval.test:ste:936"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:716" version="1" comment="Test that the less than or equal operation is supported with a greater than integer value." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:253"/>
      <state state_ref="oval:org.mitre.oval.test:ste:284"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:397" version="1" comment="Test that the bitwise and operation is supported with a single integer where the result is the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:193"/>
      <state state_ref="oval:org.mitre.oval.test:ste:699"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:917" version="1" comment="Test that the bitwise and operation is supported with a single integer where the result is not the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:123"/>
      <state state_ref="oval:org.mitre.oval.test:ste:807"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:153" version="1" comment="Test that the bitwise or operation is supported with a single integer where the result is the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:193"/>
      <state state_ref="oval:org.mitre.oval.test:ste:57"/>
    </variable_test>
    <variable_test id="oval:org.mitre.oval.test:tst:193" version="1" comment="Test that the bitwise or operation is supported with a single integer where the result is not the same as the state mask." check_existence="at_least_one_exists" check="at least one" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <object object_ref="oval:org.mitre.oval.test:obj:123"/>
      <state state_ref="oval:org.mitre.oval.test:ste:562"/>
    </variable_test>
  </tests>
  <objects>
    <variable_object id="oval:org.mitre.oval.test:obj:893" version="1" comment="This variable_object references the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:138</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:648" version="1" comment="This variable_object references the integer value '942'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:500</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:253" version="1" comment="This variable_object references the integer value '5890'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:370</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:193" version="1" comment="This variable_object references the integer value '6'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:259</var_ref>
    </variable_object>
    <variable_object id="oval:org.mitre.oval.test:obj:123" version="1" comment="This variable_object references the integer value '1'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <var_ref>oval:org.mitre.oval.test:var:855</var_ref>
    </variable_object>
  </objects>
  <states>
    <variable_state id="oval:org.mitre.oval.test:ste:633" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:398" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:38" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="not equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:946" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="not equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:193" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:709" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:811" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:960" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:720" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:359" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="greater than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:516" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:342" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:567" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:467" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:936" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:284" version="1" comment="This variable_state represents the integer value '1234'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="less than or equal">1234</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:699" version="1" comment="This variable_state represents the integer value '4'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise and">4</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:807" version="1" comment="This variable_state represents the integer value '4'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise and">4</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:57" version="1" comment="This variable_state represents the integer value '14'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise or">14</value>
    </variable_state>
    <variable_state id="oval:org.mitre.oval.test:ste:562" version="1" comment="This variable_state represents the integer value '14'." xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent">
      <value datatype="int" operation="bitwise or">14</value>
    </variable_state>
  </states>
  <variables>
    <constant_variable id="oval:org.mitre.oval.test:var:138" version="1" comment="This constant_variable represents the integer value '1234'." datatype="int">
      <value>1234</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:500" version="1" comment="This constant_variable represents the integer value '942'." datatype="int">
      <value>942</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:370" version="1" comment="This constant_variable represents the integer value '5890'." datatype="int">
      <value>5890</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:259" version="1" comment="This constant_variable represents the integer value '6'." datatype="int">
      <value>6</value>
    </constant_variable>
    <constant_variable id="oval:org.mitre.oval.test:var:855" version="1" comment="This constant_variable represents the integer value '1'." datatype="int">
      <value>1</value>
    </constant_variable>
  </variables>
</oval_definitions>